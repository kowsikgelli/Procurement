{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport instance from '../ethereum/tender';\nimport { Card, Button } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\n\nclass Procurement extends React.Component {\n  //state={owner:\"\"}\n  static async getInitialProps() {\n    const tenderCount = await instance.methods.tenderCount().call();\n    let tenders = [];\n    const d = new Date();\n    const exitDate = ~~(d.getTime() * 0.001);\n\n    for (let i = 1; i <= tenderCount; i++) {\n      const singletender = await instance.methods.Tenders(i).call();\n      tenders.push(singletender);\n      let index = tenders.indexOf(singletender);\n\n      if (exitDate > singletender.endDate) {\n        tenders.splice(index, 1);\n      }\n    }\n\n    return {\n      tenders\n    };\n  }\n\n  renderTenders() {\n    const items = this.props.tenders.map(tenderobject => {\n      return {\n        header: tenderobject.tenderSubject,\n        description: __jsx(Link, {\n          route: `/tenders/${tenderobject.id}`\n        }, __jsx(\"a\", null, \"view tender\")),\n        fluid: true\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items\n    });\n  } // async componentDidMount(){\n  // \tconst owner=await instance.methods.owner().call();\n  // \tconsole.log(owner)\n  // \tthis.setState({owner})\n  // }\n\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(Link, {\n      route: \"/tenders/new\"\n    }, __jsx(\"a\", null, __jsx(Button, {\n      floated: \"right\",\n      content: \"create tender\",\n      icon: \"add\",\n      labelposition: \"left\",\n      primary: true\n    }))), __jsx(\"h3\", null, \"Open Tenders\"), this.renderTenders()));\n  }\n\n}\n\nexport default Procurement;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/pages/index.js"],"names":["React","instance","Card","Button","Layout","Link","Procurement","Component","getInitialProps","tenderCount","methods","call","tenders","d","Date","exitDate","getTime","i","singletender","Tenders","push","index","indexOf","endDate","splice","renderTenders","items","props","map","tenderobject","header","tenderSubject","description","id","fluid","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAAQC,IAAR,EAAaC,MAAb,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,IAAR,QAAmB,WAAnB;;AACA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAAyC;AACxC;AACA,eAAaC,eAAb,GAA8B;AAC7B,UAAMC,WAAW,GAAC,MAAMR,QAAQ,CAACS,OAAT,CAAiBD,WAAjB,GAA+BE,IAA/B,EAAxB;AACA,QAAIC,OAAO,GAAC,EAAZ;AACA,UAAMC,CAAC,GAAC,IAAIC,IAAJ,EAAR;AACA,UAAMC,QAAQ,GAAC,CAAC,EAAEF,CAAC,CAACG,OAAF,KAAY,KAAd,CAAhB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAER,WAAf,EAA2BQ,CAAC,EAA5B,EAA+B;AAC9B,YAAMC,YAAY,GAAC,MAAMjB,QAAQ,CAACS,OAAT,CAAiBS,OAAjB,CAAyBF,CAAzB,EAA4BN,IAA5B,EAAzB;AACAC,MAAAA,OAAO,CAACQ,IAAR,CAAaF,YAAb;AACA,UAAIG,KAAK,GAACT,OAAO,CAACU,OAAR,CAAgBJ,YAAhB,CAAV;;AACA,UAAGH,QAAQ,GAACG,YAAY,CAACK,OAAzB,EAAiC;AAChCX,QAAAA,OAAO,CAACY,MAAR,CAAeH,KAAf,EAAqB,CAArB;AACA;AACD;;AACD,WAAO;AAACT,MAAAA;AAAD,KAAP;AACA;;AACDa,EAAAA,aAAa,GAAE;AACd,UAAMC,KAAK,GAAC,KAAKC,KAAL,CAAWf,OAAX,CAAmBgB,GAAnB,CAAuBC,YAAY,IAAE;AAChD,aAAM;AACLC,QAAAA,MAAM,EAACD,YAAY,CAACE,aADf;AAELC,QAAAA,WAAW,EACV,MAAC,IAAD;AAAM,UAAA,KAAK,EAAG,YAAWH,YAAY,CAACI,EAAG;AAAzC,WACC,+BADD,CAHI;AAOLC,QAAAA,KAAK,EAAC;AAPD,OAAN;AASA,KAVW,CAAZ;AAWA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAER;AAAnB,MAAP;AACA,GA9BuC,CA+BxC;AACA;AACA;AACA;AACA;;;AACAS,EAAAA,MAAM,GAAE;AACP,WACC,MAAC,MAAD,QACA,mBACC,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,OACC,iBACC,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAC,eAAhC;AAAgD,MAAA,IAAI,EAAC,KAArD;AAA2D,MAAA,aAAa,EAAC,MAAzE;AAAgF,MAAA,OAAO,EAAE;AAAzF,MADD,CADD,CADD,EAOC,iCAPD,EAQE,KAAKV,aAAL,EARF,CADA,CADD;AAcA;;AAnDuC;;AAqDzC,eAAenB,WAAf","sourcesContent":["import React from 'react'\nimport instance from '../ethereum/tender'\nimport {Card,Button} from 'semantic-ui-react';\nimport Layout from '../components/Layout'\nimport {Link} from '../routes'\nclass Procurement extends React.Component{\n\t//state={owner:\"\"}\n\tstatic async getInitialProps(){\n\t\tconst tenderCount=await instance.methods.tenderCount().call();\n\t\tlet tenders=[];\n\t\tconst d=new Date();\n\t\tconst exitDate=~~(d.getTime()*0.001);\n\t\tfor(let i=1;i<=tenderCount;i++){\n\t\t\tconst singletender=await instance.methods.Tenders(i).call();\n\t\t\ttenders.push(singletender);\n\t\t\tlet index=tenders.indexOf(singletender)\n\t\t\tif(exitDate>singletender.endDate){\n\t\t\t\ttenders.splice(index,1);\n\t\t\t}\n\t\t}\n\t\treturn {tenders}\n\t}\n\trenderTenders(){\n\t\tconst items=this.props.tenders.map(tenderobject=>{\n\t\t\treturn{\n\t\t\t\theader:tenderobject.tenderSubject,\n\t\t\t\tdescription:(\n\t\t\t\t\t<Link route={`/tenders/${tenderobject.id}`}>\n\t\t\t\t\t\t<a>view tender</a>\n\t\t\t\t\t</Link>\n\t\t\t\t\t),\n\t\t\t\tfluid:true\n\t\t\t}\n\t\t})\n\t\treturn <Card.Group items={items} />\n\t}\n\t// async componentDidMount(){\n\t// \tconst owner=await instance.methods.owner().call();\n\t// \tconsole.log(owner)\n\t// \tthis.setState({owner})\n\t// }\n\trender(){\n\t\treturn(\n\t\t\t<Layout>\n\t\t\t<div>\n\t\t\t\t<Link route=\"/tenders/new\">\n\t\t\t\t\t<a>\n\t\t\t\t\t\t<Button floated=\"right\" content=\"create tender\" icon=\"add\" labelposition=\"left\" primary={true}/>\n\t\t\t\t\t\t\n\t\t\t\t\t</a>\n\t\t\t\t</Link>\n\t\t\t\t<h3>Open Tenders</h3>\n\t\t\t\t{this.renderTenders()}\n\t\t\t</div>\n\t\t\t</Layout>\n\t\t\t)\n\t}\n}\nexport default Procurement"]},"metadata":{},"sourceType":"module"}