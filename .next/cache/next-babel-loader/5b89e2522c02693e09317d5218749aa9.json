{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../../components/Layout';\nimport instance from '../../../ethereum/tender';\nimport web3 from '../../../ethereum/web3';\nimport { Form, Button, Message } from 'semantic-ui-react';\nimport { Router } from '../../../routes';\n\nclass register extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: ''\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        this.setState({\n          account: accounts[0]\n        });\n        await instance.methods.Register(this.state.account).call();\n        const obj = await instance.methods.BidRegisters(this.state.account).call();\n        console.log(obj); //Router.pushRoute('/tenders/Admin/adminDetails')\n        // Router.pushRoute(`/tenders/${this.props.tenderId}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Paste Address\"), __jsx(\"input\", {\n      placeholder: \"address\",\n      value: this.state.account,\n      onChange: event => this.setState({\n        account: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      size: \"large\",\n      primary: true,\n      type: \"submit\"\n    }, \"Submit\")));\n  }\n\n}\n\nexport default register;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/pages/tenders/registration/register.js"],"names":["React","Layout","instance","web3","Form","Button","Message","Router","register","Component","account","event","preventDefault","setState","loading","errorMessage","accounts","eth","getAccounts","methods","Register","state","call","obj","BidRegisters","console","log","err","message","render","onSubmit","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,IAAR,EAAaC,MAAb,EAAoBC,OAApB,QAAkC,mBAAlC;AACA,SAAQC,MAAR,QAAqB,iBAArB;;AACA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAsC;AAAA;AAAA;;AAAA,mCAC/B;AACLC,MAAAA,OAAO,EAAC;AADH,KAD+B;;AAAA,sCAI5B,MAAOC,KAAP,IAAe;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC,IAAT;AAAcC,QAAAA,YAAY,EAAC;AAA3B,OAAd;;AACA,UAAG;AACF,cAAMC,QAAQ,GAAC,MAAMb,IAAI,CAACc,GAAL,CAASC,WAAT,EAArB;AACA,aAAKL,QAAL,CAAc;AAACH,UAAAA,OAAO,EAACM,QAAQ,CAAC,CAAD;AAAjB,SAAd;AACA,cAAMd,QAAQ,CAACiB,OAAT,CAAiBC,QAAjB,CAA0B,KAAKC,KAAL,CAAWX,OAArC,EAA8CY,IAA9C,EAAN;AACA,cAAMC,GAAG,GAAC,MAAMrB,QAAQ,CAACiB,OAAT,CAAiBK,YAAjB,CAA8B,KAAKH,KAAL,CAAWX,OAAzC,EAAkDY,IAAlD,EAAhB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EALE,CAMF;AACA;AACA,OARD,CAQC,OAAMI,GAAN,EAAU;AACV,aAAKd,QAAL,CAAc;AAACE,UAAAA,YAAY,EAACY,GAAG,CAACC;AAAlB,SAAd;AACA;;AACD,WAAKf,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAd;AACA,KAnBoC;AAAA;;AAoBrCe,EAAAA,MAAM,GAAE;AACP,WACC,MAAC,MAAD,QACC,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKT,KAAL,CAAWN;AAAnD,OACC,MAAC,IAAD,CAAM,KAAN,QACC,qCADD,EAEC;AAAO,MAAA,WAAW,EAAC,SAAnB;AAA6B,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWX,OAA/C;AAAwD,MAAA,QAAQ,EAAEC,KAAK,IAAE,KAAKE,QAAL,CAAc;AAACH,QAAAA,OAAO,EAACC,KAAK,CAACoB,MAAN,CAAaC;AAAtB,OAAd;AAAzE,MAFD,CADD,EAOC,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,QAAtB;AAA+B,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWN;AAAnD,MAPD,EAQC,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWP,OAA5B;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAkD,MAAA,OAAO,MAAzD;AAA0D,MAAA,IAAI,EAAC;AAA/D,gBARD,CADD,CADD;AAcA;;AAnCoC;;AAqCtC,eAAeN,QAAf","sourcesContent":["import React from 'react'\nimport Layout from '../../../components/Layout';\nimport instance from '../../../ethereum/tender';\nimport web3 from '../../../ethereum/web3';\nimport {Form,Button,Message} from 'semantic-ui-react'\nimport {Router} from '../../../routes';\nclass register extends React.Component{\n\tstate={\n\t\taccount:''\n\t}\n\tonSubmit=async (event)=>{\n\t\tevent.preventDefault();\n\t\tthis.setState({loading:true,errorMessage:''});\n\t\ttry{\n\t\t\tconst accounts=await web3.eth.getAccounts();\n\t\t\tthis.setState({account:accounts[0]});\n\t\t\tawait instance.methods.Register(this.state.account).call();\n\t\t\tconst obj=await instance.methods.BidRegisters(this.state.account).call();\n\t\t\tconsole.log(obj);\n\t\t\t//Router.pushRoute('/tenders/Admin/adminDetails')\n\t\t\t// Router.pushRoute(`/tenders/${this.props.tenderId}`);\n\t\t}catch(err){\n\t\t\tthis.setState({errorMessage:err.message});\n\t\t}\n\t\tthis.setState({loading:false})\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<Layout>\n\t\t\t\t<Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>Paste Address</label>\n\t\t\t\t\t\t<input placeholder=\"address\" value={this.state.account} onChange={event=>this.setState({account:event.target.value})}/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<Message error header=\"Oops!!\" content={this.state.errorMessage} />\n\t\t\t\t\t<Button loading={this.state.loading} size='large' primary type='submit'>Submit</Button>\n\t\t\t\t</Form>\n\t\t\t</Layout>\n\t\t\t)\n\t}\t\t\n}\nexport default register"]},"metadata":{},"sourceType":"module"}