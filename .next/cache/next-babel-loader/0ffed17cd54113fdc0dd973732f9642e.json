{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport instance from '../../../ethereum/tender';\nimport web3 from '../../../ethereum/web3';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\n\nvar winners =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(winners, _React$Component);\n\n  function winners() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, winners);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(winners)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      Admin: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(winners, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          tenderId = _this$props.tenderId,\n          tenderType = _this$props.tenderType,\n          startDate = _this$props.startDate,\n          endDate = _this$props.endDate,\n          tenderSubject = _this$props.tenderSubject,\n          tenderReceivingLocation = _this$props.tenderReceivingLocation,\n          maxBidValue = _this$props.maxBidValue,\n          winner = _this$props.winner,\n          winnerBid = _this$props.winnerBid;\n      var start = new Date(startDate * 1000);\n      var normalStartDate = \"\".concat(start.getDate(), \"/\").concat(start.getMonth() + 1, \"/\").concat(start.getFullYear(), \"    \").concat(start.getHours(), \":\").concat(start.getMinutes(), \":\").concat(start.getSeconds());\n      var end = new Date(endDate * 1000);\n      var normalEndDate = \"\".concat(end.getDate(), \"/\").concat(end.getMonth() + 1, \"/\").concat(end.getFullYear(), \"    \").concat(end.getHours(), \":\").concat(end.getMinutes(), \":\").concat(end.getSeconds());\n      var items = [{\n        header: winner,\n        meta: winnerBid,\n        description: 'winner of this Tender :)',\n        fluid: true\n      }, {\n        header: tenderType,\n        meta: \"type of tender\",\n        description: 'tender type is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: tenderId,\n        description: 'tender id is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: normalStartDate,\n        description: 'tender start date is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: normalEndDate,\n        description: 'tender closing date is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: tenderSubject,\n        description: 'tender subject is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: tenderReceivingLocation,\n        description: 'tenderReceivingLocation is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: maxBidValue,\n        description: 'maxBidValue is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var owner, winner, tenderDetails, bidCount, winnerBids, i, bid, singleTenderId, singleBid, lowestBidOfWinner, _i;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(instance.methods.owner().call());\n\n            case 2:\n              owner = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(instance.methods.winner(props.query.id).call({\n                from: owner\n              }));\n\n            case 5:\n              winner = _context.sent;\n              console.log(winner);\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(instance.methods.Tenders(props.query.id).call());\n\n            case 9:\n              tenderDetails = _context.sent;\n              console.log(tenderDetails[1]);\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(instance.methods.bidCount().call());\n\n            case 13:\n              bidCount = _context.sent;\n              winnerBids = [];\n              i = 1;\n\n            case 16:\n              if (!(i <= bidCount)) {\n                _context.next = 29;\n                break;\n              }\n\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(instance.methods.Bids(i).call());\n\n            case 19:\n              bid = _context.sent;\n              singleTenderId = bid.tenderId;\n\n              if (!(singleTenderId == props.query.id && bid.bidder == winner)) {\n                _context.next = 26;\n                break;\n              }\n\n              _context.next = 24;\n              return _regeneratorRuntime.awrap(instance.methods.Bids(props.query.id).call());\n\n            case 24:\n              singleBid = _context.sent;\n              winnerBids.push(singleBid);\n\n            case 26:\n              i++;\n              _context.next = 16;\n              break;\n\n            case 29:\n              lowestBidOfWinner = winnerBids[0].bidValue;\n\n              for (_i = 0; _i < winnerBids.length; _i++) {\n                if (winnerBids[_i].bidValue < lowestBidOfWinner) {\n                  lowestBidOfWinner = winnerBids[_i].bidValue;\n                }\n              }\n\n              return _context.abrupt(\"return\", {\n                tenderId: tenderDetails[0],\n                tenderType: tenderDetails[1],\n                startDate: tenderDetails[2],\n                endDate: tenderDetails[3],\n                tenderSubject: tenderDetails[4],\n                tenderReceivingLocation: tenderDetails[5],\n                maxBidValue: tenderDetails[6],\n                winner: winner,\n                winnerBid: lowestBidOfWinner\n              });\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return winners;\n}(React.Component);\n\nexport default winners;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/pages/tenders/winner/winners.js"],"names":["React","instance","web3","Card","Layout","winners","Admin","props","tenderId","tenderType","startDate","endDate","tenderSubject","tenderReceivingLocation","maxBidValue","winner","winnerBid","start","Date","normalStartDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","end","normalEndDate","items","header","meta","description","fluid","style","overflowWrap","methods","owner","call","query","id","from","console","log","Tenders","tenderDetails","bidCount","winnerBids","i","Bids","bid","singleTenderId","bidder","singleBid","push","lowestBidOfWinner","bidValue","length","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport instance from '../../../ethereum/tender';\nimport web3 from '../../../ethereum/web3';\nimport {Card} from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\nclass winners extends React.Component{\n\tstate={\n\t\tAdmin:''\n\t}\n\tstatic async getInitialProps(props){\n\t\tconst owner=await instance.methods.owner().call();\n\t\tconst winner=await instance.methods.winner(props.query.id).call({from:owner});\n\t\t\n\t\tconsole.log(winner)\n\t\tconst tenderDetails=await instance.methods.Tenders(props.query.id).call();\n\t\tconsole.log(tenderDetails[1])\n\t\tconst bidCount= await instance.methods.bidCount().call();\n\t\tlet winnerBids=[]\n\t\tfor(let i=1;i<=bidCount;i++){\n\t\t\tconst bid=await instance.methods.Bids(i).call();\n\t\t\tlet singleTenderId=bid.tenderId;\n\t\t\t\n\t\t\tif((singleTenderId==props.query.id) && (bid.bidder==winner)){\n\t\t\t\t\n\t\t\tlet singleBid=await instance.methods.Bids(props.query.id).call();\n\t\t\t\n\t\t\t\twinnerBids.push(singleBid);\n\t\t\t}\n\t\t}\n\t\tlet lowestBidOfWinner=winnerBids[0].bidValue;\n\t\tfor(let i=0;i<winnerBids.length;i++){\n\t\t\tif(winnerBids[i].bidValue<lowestBidOfWinner){\n\t\t\t\tlowestBidOfWinner=winnerBids[i].bidValue;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\ttenderId:tenderDetails[0],\n\t\t\ttenderType:tenderDetails[1],\n\t\t\tstartDate:tenderDetails[2],\n\t\t\tendDate:tenderDetails[3],\n\t\t\ttenderSubject:tenderDetails[4],\n\t\t\ttenderReceivingLocation:tenderDetails[5],\n\t\t\tmaxBidValue:tenderDetails[6],\n\t\t\twinner:winner,\n\t\t\twinnerBid:lowestBidOfWinner\n\t\t}\n\t}\n\trenderCards(){\n\t\tconst {\n\t\t\ttenderId,\n\t\t\ttenderType,\n\t\t\tstartDate,\n\t\t\tendDate,\n\t\t\ttenderSubject,\n\t\t\ttenderReceivingLocation,\n\t\t\tmaxBidValue,\n\t\t\twinner,\n\t\t\twinnerBid\n\t\t}=this.props;\n\t\tconst start = new Date(startDate*1000);\n\t\tconst normalStartDate=`${start.getDate()}/${start.getMonth()+1}/${start.getFullYear()}    ${start.getHours()}:${start.getMinutes()}:${start.getSeconds()}`\n\t\tconst end = new Date(endDate*1000);\n\t\tconst normalEndDate=`${end.getDate()}/${end.getMonth()+1}/${end.getFullYear()}    ${end.getHours()}:${end.getMinutes()}:${end.getSeconds()}`\n\t\tconst items=[\n\t\t\t{\n\t\t\t\theader:winner,\n\t\t\t\tmeta:winnerBid,\n\t\t\t\tdescription:'winner of this Tender :)',\n\t\t\t\tfluid:true\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderType,\n\t\t\t\tmeta:\"type of tender\",\n\t\t\t\tdescription:'tender type is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderId,\n\t\t\t\tdescription:'tender id is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:normalStartDate,\n\t\t\t\tdescription:'tender start date is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:normalEndDate,\n\t\t\t\tdescription:'tender closing date is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderSubject,\n\t\t\t\tdescription:'tender subject is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderReceivingLocation,\n\t\t\t\tdescription:'tenderReceivingLocation is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:maxBidValue,\n\t\t\t\tdescription:'maxBidValue is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t}\n\t\t]\n\t\treturn <Card.Group items={items} />\n\t}\n\trender(){\n\t\treturn(\n\t\t\t\t<Layout>\n\t\t\t\t\t\n\t\t\t\t</Layout>\n\t\t\t)\n\t}\n}\nexport default winners;"]},"metadata":{},"sourceType":"module"}