{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../../components/Layout';\nimport { Form, Button, Message } from 'semantic-ui-react';\nimport instance from '../../../ethereum/tender';\nimport web3 from '../../../ethereum/web3';\nimport { Router } from '../../../routes';\n\nvar newBid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(newBid, _React$Component);\n\n  function newBid() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, newBid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(newBid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      bidValue: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadFile\", function (event) {\n      var reader = new FileReader();\n      reader.readAsText(event.target.files[0]);\n      console.log(event.target.files[0]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                loading: true,\n                errorMessage: ''\n              });\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(instance.methods.submitBid(_this.props.tenderId, _this.state.bidValue).send({\n                from: accounts[0]\n              }));\n\n            case 8:\n              Router.pushRoute(\"/tenders/\".concat(_this.props.tenderId));\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                errorMessage: _context.t0.message\n              });\n\n            case 14:\n              _this.setState({\n                loading: false\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 11]]);\n    });\n\n    return _this;\n  }\n\n  _createClass(newBid, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Bid Value\"), __jsx(\"input\", {\n        placeholder: \"Bid Value\",\n        value: this.state.bidValue,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            bidValue: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"upload technical and financial bids\"), __jsx(\"input\", {\n        type: \"file\",\n        onChange: this.uploadFile\n      })), __jsx(Message, {\n        error: true,\n        header: \"Oops!!\",\n        content: this.state.errorMessage\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        primary: true,\n        type: \"submit\"\n      }, \"Submit\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      return _regeneratorRuntime.async(function getInitialProps$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", {\n                tenderId: props.query.id\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return newBid;\n}(React.Component);\n\nexport default newBid;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/pages/tenders/submitbid/newbid.js"],"names":["React","Layout","Form","Button","Message","instance","web3","Router","newBid","bidValue","errorMessage","loading","event","reader","FileReader","readAsText","target","files","console","log","preventDefault","setState","eth","getAccounts","accounts","methods","submitBid","props","tenderId","state","send","from","pushRoute","message","onSubmit","value","uploadFile","query","id","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Layout from '../../../components/Layout';\nimport {Form,Button,Message} from 'semantic-ui-react'\nimport instance from '../../../ethereum/tender';\nimport web3 from '../../../ethereum/web3';\nimport {Router} from '../../../routes';\nclass newBid extends React.Component{\n\tstate={\n\t\tbidValue:'',\n\t\terrorMessage:'',\n\t\tloading:false\n\t}\n\tstatic async getInitialProps(props){\n\t\treturn{\n\t\t\ttenderId:props.query.id\n\t\t}\n\t}\n\tuploadFile=(event)=>{\n\t\tconst reader=new FileReader()\n\t\treader.readAsText(event.target.files[0]);\n\t\tconsole.log(event.target.files[0])\n\t}\n\tonSubmit=async (event)=>{\n\t\tevent.preventDefault();\n\t\tthis.setState({loading:true,errorMessage:''});\n\t\ttry{\n\t\t\tconst accounts=await web3.eth.getAccounts();\n\t\t\tawait instance.methods.submitBid(this.props.tenderId,this.state.bidValue)\n\t\t\t.send({\n\t\t\t\tfrom:accounts[0]\n\t\t\t})\n\t\t\tRouter.pushRoute(`/tenders/${this.props.tenderId}`);\n\t\t}catch(err){\n\t\t\tthis.setState({errorMessage:err.message});\n\t\t}\n\t\tthis.setState({loading:false})\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<Layout>\n\t\t\t\t<Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>Bid Value</label>\n\t\t\t\t\t\t<input placeholder=\"Bid Value\" value={this.state.bidValue} onChange={event=>this.setState({bidValue:event.target.value})}/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label>upload technical and financial bids</label>\n\t\t\t\t\t\t<input type='file' onChange={this.uploadFile}/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Message error header=\"Oops!!\" content={this.state.errorMessage} />\n\t\t\t\t\t<Button loading={this.state.loading} primary type='submit'>Submit</Button>\n\t\t\t\t</Form>\n\n\t\t\t</Layout>\n\t\t\t)\n\t}\n}\nexport default newBid;"]},"metadata":{},"sourceType":"module"}