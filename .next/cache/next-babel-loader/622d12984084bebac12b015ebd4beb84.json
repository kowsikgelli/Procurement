{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../components/Layout';\nimport instance from '../../ethereum/tender';\nimport { Card } from 'semantic-ui-react';\n\nvar tendershow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(tendershow, _React$Component);\n\n  function tendershow() {\n    _classCallCheck(this, tendershow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(tendershow).apply(this, arguments));\n  }\n\n  _createClass(tendershow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          tenderId = _this$props.tenderId,\n          tenderType = _this$props.tenderType,\n          startDate = _this$props.startDate,\n          endDate = _this$props.endDate,\n          tenderSubject = _this$props.tenderSubject,\n          tenderReceivingLocation = _this$props.tenderReceivingLocation,\n          maxBidValue = _this$props.maxBidValue;\n      var start = new Date(startDate * 1000);\n      var normalStartDate = \"\".concat(start.getDate(), \"/\").concat(start.getMonth() + 1, \"/\").concat(start.getFullYear(), \"    \").concat(start.getHours(), \":\").concat(start.getMinutes(), \":\").concat(start.getSeconds());\n      var end = new Date(endDate * 1000);\n      var normalEndDate = \"\".concat(end.getDate(), \"/\").concat(end.getMonth() + 1, \"/\").concat(end.getFullYear(), \"    \").concat(start.getHours(), \":\").concat(start.getMinutes(), \":\").concat(start.getSeconds());\n      var items = [{\n        header: tenderType,\n        meta: \"type of tender\",\n        description: 'tender type is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: tenderId,\n        description: 'tender id is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: normalStartDate,\n        description: 'tender start date is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: normalEndDate,\n        description: 'tender closing date is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: tenderSubject,\n        description: 'tender subject is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: tenderReceivingLocation,\n        description: 'tenderReceivingLocation is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: maxBidValue,\n        description: 'maxBidValue is shown here',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.props.query.id)\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Tender Details\"), this.renderCards());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var tenderDetails;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(instance.methods.Tenders(props.query.id).call());\n\n            case 2:\n              tenderDetails = _context.sent;\n              console.log(tenderDetails[1]);\n              return _context.abrupt(\"return\", {\n                tenderId: tenderDetails[0],\n                tenderType: tenderDetails[1],\n                startDate: tenderDetails[2],\n                endDate: tenderDetails[3],\n                tenderSubject: tenderDetails[4],\n                tenderReceivingLocation: tenderDetails[5],\n                maxBidValue: tenderDetails[6]\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return tendershow;\n}(React.Component);\n\nexport default tendershow;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/pages/tenders/show.js"],"names":["React","Layout","instance","Card","tendershow","props","tenderId","tenderType","startDate","endDate","tenderSubject","tenderReceivingLocation","maxBidValue","start","Date","normalStartDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","end","normalEndDate","items","header","meta","description","style","overflowWrap","renderCards","methods","Tenders","query","id","call","tenderDetails","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Layout from '../../components/Layout'\nimport instance from '../../ethereum/tender';\nimport {Card} from 'semantic-ui-react';\nclass tendershow extends React.Component{\n\tstatic async getInitialProps(props){\n\t\tconst tenderDetails=await instance.methods.Tenders(props.query.id).call();\n\t\tconsole.log(tenderDetails[1])\n\t\treturn {\n\t\t\ttenderId:tenderDetails[0],\n\t\t\ttenderType:tenderDetails[1],\n\t\t\tstartDate:tenderDetails[2],\n\t\t\tendDate:tenderDetails[3],\n\t\t\ttenderSubject:tenderDetails[4],\n\t\t\ttenderReceivingLocation:tenderDetails[5],\n\t\t\tmaxBidValue:tenderDetails[6]\n\t\t}\n\t}\n\trenderCards(){\n\t\tconst {\n\t\t\ttenderId,\n\t\t\ttenderType,\n\t\t\tstartDate,\n\t\t\tendDate,\n\t\t\ttenderSubject,\n\t\t\ttenderReceivingLocation,\n\t\t\tmaxBidValue\n\t\t}=this.props;\n\t\tconst start = new Date(startDate*1000);\n\t\tconst normalStartDate=`${start.getDate()}/${start.getMonth()+1}/${start.getFullYear()}    ${start.getHours()}:${start.getMinutes()}:${start.getSeconds()}`\n\t\tconst end = new Date(endDate*1000);\n\t\tconst normalEndDate=`${end.getDate()}/${end.getMonth()+1}/${end.getFullYear()}    ${start.getHours()}:${start.getMinutes()}:${start.getSeconds()}`\n\t\tconst items=[\n\t\t\t{\n\t\t\t\theader:tenderType,\n\t\t\t\tmeta:\"type of tender\",\n\t\t\t\tdescription:'tender type is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderId,\n\t\t\t\tdescription:'tender id is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:normalStartDate,\n\t\t\t\tdescription:'tender start date is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:normalEndDate,\n\t\t\t\tdescription:'tender closing date is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderSubject,\n\t\t\t\tdescription:'tender subject is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderReceivingLocation,\n\t\t\t\tdescription:'tenderReceivingLocation is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:maxBidValue,\n\t\t\t\tdescription:'maxBidValue is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t}\n\t\t]\n\t\treturn <Card.Group items={items} />\n\t}\n\trender(){\n\n\t\t//console.log(this.props.query.id)\n\t\treturn(\n\t\t\t\t<Layout>\n\t\t\t\t\t<h3>Tender Details</h3>\n\t\t\t\t\t{this.renderCards()}\n\t\t\t\t</Layout>\n\t\t\t)\n\t}\n}\nexport default tendershow"]},"metadata":{},"sourceType":"module"}