{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport Web3 from 'web3';\nvar web3;\n\nif (true && typeof window.web3 !== 'undefined') {\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  var provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/6c47f50d50a54cf3bd3527414b6c3d4c');\n  web3 = new Web3(provider);\n}\n\nwindow.addEventListener('load', function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!window.ethereum) {\n            _context.next = 12;\n            break;\n          }\n\n          window.web3 = new Web3(ethereum);\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(ethereum.enable());\n\n        case 5:\n          // Acccounts now exposed\n          web3.eth.sendTransaction({\n            /* ... */\n          });\n          _context.next = 10;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](2);\n\n        case 10:\n          _context.next = 13;\n          break;\n\n        case 12:\n          // Legacy dapp browsers...\n          if (true && window.web3) {\n            window.web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n            web3.eth.sendTransaction({\n              /* ... */\n            });\n          } // Non-dapp browsers...\n          else {\n              console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n            }\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 8]]);\n});\nexport default web3;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/ethereum/web3.js"],"names":["Web3","web3","window","currentProvider","provider","providers","HttpProvider","addEventListener","ethereum","enable","eth","sendTransaction","console","log"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ;;AACA,IAAG,QAA+B,OAAOC,MAAM,CAACD,IAAd,KAAsB,WAAxD,EAAqE;AACnEA,EAAAA,IAAI,GAAC,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYE,eAArB,CAAL;AACD,CAFD,MAEK;AACH,MAAMC,QAAQ,GAAC,IAAIJ,IAAI,CAACK,SAAL,CAAeC,YAAnB,CACb,+DADa,CAAf;AAGAL,EAAAA,IAAI,GAAC,IAAID,IAAJ,CAASI,QAAT,CAAL;AACD;;AAEDF,MAAM,CAACK,gBAAP,CAAwB,MAAxB,EAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,eAExBL,MAAM,CAACM,QAFiB;AAAA;AAAA;AAAA;;AAGxBN,UAAAA,MAAM,CAACD,IAAP,GAAc,IAAID,IAAJ,CAASQ,QAAT,CAAd;AAHwB;AAAA;AAAA,2CAMdA,QAAQ,CAACC,MAAT,EANc;;AAAA;AAOpB;AACAR,UAAAA,IAAI,CAACS,GAAL,CAASC,eAAT,CAAyB;AAAC;AAAD,WAAzB;AARoB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAa5B;AACK,cAAI,QAA+BT,MAAM,CAACD,IAA1C,EAAgD;AACjDC,YAAAA,MAAM,CAACD,IAAP,GAAc,IAAID,IAAJ,CAASC,IAAI,CAACE,eAAd,CAAd,CADiD,CAEjD;;AACAF,YAAAA,IAAI,CAACS,GAAL,CAASC,eAAT,CAAyB;AAAC;AAAD,aAAzB;AACH,WAJI,CAKL;AALK,eAMA;AACDC,cAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;;AAtB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;AAwBA,eAAeZ,IAAf","sourcesContent":["import Web3 from 'web3';\n\nlet web3;\nif(typeof window!=='undefined' && typeof window.web3 !=='undefined' ){\n  web3=new Web3(window.web3.currentProvider);\n}else{\n  const provider=new Web3.providers.HttpProvider(\n    'https://rinkeby.infura.io/v3/6c47f50d50a54cf3bd3527414b6c3d4c'\n  )\n  web3=new Web3(provider);\n}\n\nwindow.addEventListener('load', async () => {\n    // Modern dapp browsers...\n    if (window.ethereum) {\n        window.web3 = new Web3(ethereum);\n        try {\n            // Request account access if needed\n            await ethereum.enable();\n            // Acccounts now exposed\n            web3.eth.sendTransaction({/* ... */});\n        } catch (error) {\n            // User denied account access...\n        }\n    }\n    // Legacy dapp browsers...\n    else if (typeof window!=='undefined' && window.web3) {\n        window.web3 = new Web3(web3.currentProvider);\n        // Acccounts always exposed\n        web3.eth.sendTransaction({/* ... */});\n    }\n    // Non-dapp browsers...\n    else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n});\nexport default web3;"]},"metadata":{},"sourceType":"module"}