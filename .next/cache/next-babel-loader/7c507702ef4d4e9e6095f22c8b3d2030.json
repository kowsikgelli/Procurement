{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport instance from '../ethereum/tender';\nimport { Card, Button, Loader, Message, Form } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\n\nclass Procurement extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      errorMessage: '',\n      loading: false,\n      account: '',\n      successMessage: ''\n    });\n\n    _defineProperty(this, \"register\", async event => {\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        console.log(accounts);\n        this.setState({\n          account: accounts[0]\n        });\n        console.log(this.state.account);\n        await instance.methods.Register(this.state.account).send({\n          from: accounts[0]\n        });\n        this.setState({\n          successMessage: \"successfully Registered\"\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n        console.log(err.message);\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps() {\n    const tenderCount = await instance.methods.tenderCount().call();\n    let tenders = [];\n    const d = new Date();\n    const exitDate = ~~(d.getTime() * 0.001);\n\n    for (let i = 1; i <= tenderCount; i++) {\n      const singletender = await instance.methods.Tenders(i).call();\n      tenders.push(singletender);\n      let index = tenders.indexOf(singletender);\n\n      if (exitDate > singletender.endDate) {\n        tenders.splice(index, 1);\n      }\n    }\n\n    return {\n      tenders\n    };\n  }\n\n  renderTenders() {\n    const items = this.props.tenders.map(tenderobject => {\n      return {\n        header: tenderobject.tenderSubject,\n        description: __jsx(Link, {\n          route: `/tenders/${tenderobject.id}`\n        }, __jsx(\"a\", null, \"view tender\")),\n        fluid: true,\n        color: 'red'\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(Link, {\n      route: \"/tenders/new\"\n    }, __jsx(\"a\", null, __jsx(Button, {\n      floated: \"right\",\n      content: \"create tender\",\n      icon: \"add\",\n      labelposition: \"left\",\n      primary: true\n    }))), __jsx(Form, {\n      onSubmit: this.register,\n      error: !!this.state.errorMessage,\n      success: !!this.state.successMessage\n    }, __jsx(Button, {\n      loading: this.state.loading,\n      type: \"submit\",\n      content: \"Register\",\n      primary: true\n    }), __jsx(Message, {\n      error: true,\n      header: this.state.errorMessage\n    }), __jsx(Message, {\n      success: true,\n      header: this.state.successMessage\n    })), __jsx(\"h3\", null, \"Open Tenders\"), this.renderTenders()));\n  }\n\n}\n\nexport default Procurement;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/pages/index.js"],"names":["React","instance","Card","Button","Loader","Message","Form","Layout","Link","Procurement","Component","errorMessage","loading","account","successMessage","event","setState","accounts","web3","eth","getAccounts","console","log","state","methods","Register","send","from","err","message","getInitialProps","tenderCount","call","tenders","d","Date","exitDate","getTime","i","singletender","Tenders","push","index","indexOf","endDate","splice","renderTenders","items","props","map","tenderobject","header","tenderSubject","description","id","fluid","color","render","register"],"mappings":"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","sourcesContent":["import React from 'react'\nimport instance from '../ethereum/tender'\nimport {Card,Button,Loader,Message,Form} from 'semantic-ui-react';\nimport Layout from '../components/Layout'\nimport {Link} from '../routes'\nclass Procurement extends React.Component{\n\tstate={\n\t\terrorMessage:'',\n\t\tloading:false,\n\t\taccount:'',\n\t\tsuccessMessage:''\n\t}\n\tstatic async getInitialProps(){\n\t\tconst tenderCount=await instance.methods.tenderCount().call();\n\t\tlet tenders=[];\n\t\tconst d=new Date();\n\t\tconst exitDate=~~(d.getTime()*0.001);\n\t\tfor(let i=1;i<=tenderCount;i++){\n\t\t\tconst singletender=await instance.methods.Tenders(i).call();\n\t\t\ttenders.push(singletender);\n\t\t\tlet index=tenders.indexOf(singletender)\n\t\t\tif(exitDate>singletender.endDate){\n\t\t\t\ttenders.splice(index,1);\n\t\t\t}\n\t\t}\n\t\treturn {tenders}\n\t}\n\tregister=async (event)=>{\n\t\tthis.setState({loading:true,errorMessage:''});\n\t\ttry{\n\t\t\tconst accounts=await web3.eth.getAccounts();\n\t\t\tconsole.log(accounts)\n\t\t\tthis.setState({account:accounts[0]})\n\t\t\tconsole.log(this.state.account)\n\t\t\tawait instance.methods.Register(this.state.account)\n\t\t\t.send({\n\t\t\t\tfrom:accounts[0]\n\t\t\t});\n\t\t\tthis.setState({successMessage:\"successfully Registered\"})\n\t\t}catch(err){\n\t\t\tthis.setState({errorMessage:err.message});\n\t\t\tconsole.log(err.message)\n\t\t}\n\t\tthis.setState({loading:false})\n\t}\n\trenderTenders(){\n\t\tconst items=this.props.tenders.map(tenderobject=>{\n\t\t\treturn{\n\t\t\t\theader:tenderobject.tenderSubject,\n\t\t\t\tdescription:(\n\t\t\t\t\t<Link route={`/tenders/${tenderobject.id}`}>\n\t\t\t\t\t\t<a>view tender</a>\n\t\t\t\t\t</Link>\n\t\t\t\t\t),\n\t\t\t\tfluid:true,\n\t\t\t\tcolor:'red'\n\t\t\t}\n\t\t})\n\t\treturn <Card.Group items={items} />\n\t}\n\t\n\trender(){\n\t\treturn(\n\t\t\t<Layout>\n\t\t\t<div>\n\t\t\t\t<Link route=\"/tenders/new\">\n\t\t\t\t\t<a>\n\t\t\t\t\t\t<Button floated=\"right\" content=\"create tender\" icon=\"add\" labelposition=\"left\" primary={true}/>\n\t\t\t\t\t\t\n\t\t\t\t\t</a>\n\t\t\t\t</Link>\n\n\t\t\t\t<Form onSubmit={this.register} error={!!this.state.errorMessage} success={!!this.state.successMessage}>\n\t\t\t\t\t<Button loading={this.state.loading} type=\"submit\" content=\"Register\"  primary={true}/>\n\t\t\t\t\t<Message error header={this.state.errorMessage}/>\n\t\t\t\t\t<Message success header={this.state.successMessage}/>\n\t\t\t\t</Form>\n\t\t\t\t\n\t\t\t\t<h3>Open Tenders</h3>\n\t\t\t\t{this.renderTenders()}\n\t\t\t</div>\n\t\t\t</Layout>\n\t\t\t)\n\t}\n}\nexport default Procurement"]},"metadata":{},"sourceType":"module"}