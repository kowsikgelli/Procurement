{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport instance from '../../../ethereum/tender';\nimport web3 from '../../../ethereum/web3';\n\nvar showBids =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(showBids, _React$Component);\n\n  function showBids() {\n    _classCallCheck(this, showBids);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(showBids).apply(this, arguments));\n  }\n\n  _createClass(showBids, [{\n    key: \"renderBids\",\n    value: function renderBids() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"h1\", null, \"this is bid list\");\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var bidCount, bids, i, bidTenderId, singleBid;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(instance.methods.bidCount().call());\n\n            case 2:\n              bidCount = _context.sent;\n              bids = [];\n              i = 1;\n\n            case 5:\n              if (!(i <= bidCount)) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(instance.methods().Bids(i).tenderId.call());\n\n            case 8:\n              bidTenderId = _context.sent;\n\n              if (!(bidTenderId == props.query.id)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(instance.methods().Bids(i).call());\n\n            case 12:\n              singleBid = _context.sent;\n              bids.push(singleBid);\n\n            case 14:\n              i++;\n              _context.next = 5;\n              break;\n\n            case 17:\n              return _context.abrupt(\"return\", {\n                tenderId: props.query.id\n              });\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return showBids;\n}(React.Component);\n\nexport default showBids;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/pages/tenders/viewBids/showBids.js"],"names":["React","instance","web3","showBids","props","methods","bidCount","call","bids","i","Bids","tenderId","bidTenderId","query","id","singleBid","push","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;IAEMC,Q;;;;;;;;;;;;;iCAeO,CAEX;;;6BACO;AACP,aACC,qCADD;AAGA;;;oCArB4BC,K;;;;;;;+CACNH,QAAQ,CAACI,OAAT,CAAiBC,QAAjB,GAA4BC,IAA5B,E;;;AAAhBD,cAAAA,Q;AACFE,cAAAA,I,GAAK,E;AACDC,cAAAA,C,GAAE,C;;;oBAAEA,CAAC,IAAEH,Q;;;;;;+CACUL,QAAQ,CAACI,OAAT,GAAmBK,IAAnB,CAAwBD,CAAxB,EAA2BE,QAA3B,CAAoCJ,IAApC,E;;;AAAlBK,cAAAA,W;;oBACHA,WAAW,IAAER,KAAK,CAACS,KAAN,CAAYC,E;;;;;;+CACLb,QAAQ,CAACI,OAAT,GAAmBK,IAAnB,CAAwBD,CAAxB,EAA2BF,IAA3B,E;;;AAAhBQ,cAAAA,S;AACNP,cAAAA,IAAI,CAACQ,IAAL,CAAUD,SAAV;;;AAJsBN,cAAAA,CAAC,E;;;;;+CAOnB;AACLE,gBAAAA,QAAQ,EAACP,KAAK,CAACS,KAAN,CAAYC;AADhB,e;;;;;;;;;;;;EAXed,KAAK,CAACiB,S;;AAwB7B,eAAed,QAAf","sourcesContent":["import React from 'react';\nimport instance from '../../../ethereum/tender'\nimport web3 from '../../../ethereum/web3';\n\nclass showBids extends React.Component{\n\tstatic async getInitialProps(props){\n\t\tconst bidCount= await instance.methods.bidCount().call();\n\t\tlet bids=[]\n\t\tfor(let i=1;i<=bidCount;i++){\n\t\t\tconst bidTenderId=await instance.methods().Bids(i).tenderId.call();\n\t\t\tif(bidTenderId==props.query.id){\n\t\t\t\tconst singleBid=await instance.methods().Bids(i).call();\n\t\t\t\tbids.push(singleBid);\n\t\t\t}\n\t\t}\n\t\treturn{\n\t\t\ttenderId:props.query.id\n\t\t}\n\t}\n\trenderBids(){\n\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<h1>this is bid list</h1>\n\t\t\t)\n\t}\n}\nexport default showBids;"]},"metadata":{},"sourceType":"module"}