{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport Web3 from 'web3';\nvar web3;\n\nvar init = function init() {\n  var provider;\n  return _regeneratorRuntime.async(function init$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(true && typeof window.ethereum !== 'undefined')) {\n            _context.next = 4;\n            break;\n          }\n\n          window.web3 = new Web3(window.ethereum);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(window.ethereum.enable());\n\n        case 4:\n          if (true && typeof window.web3 !== 'undefined') {\n            web3 = new Web3(window.web3.currentProvider);\n          } else {\n            provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/6c47f50d50a54cf3bd3527414b6c3d4c');\n            web3 = new Web3(provider);\n          }\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\ninit(); // if(typeof window!=='undefined' && typeof window.ethereum !=='undefined'){\n// \twindow.web3 = new Web3(window.ethereum)\n//     await window.ethereum.enable()\n// }\n// else if(typeof window!=='undefined' && typeof window.web3 !=='undefined' ){\n//   web3=new Web3(window.web3.currentProvider);\n// }else{\n//   const provider=new Web3.providers.HttpProvider(\n//     'https://rinkeby.infura.io/v3/6c47f50d50a54cf3bd3527414b6c3d4c'\n//   )\n//   web3=new Web3(provider);\n// }\n//  const loadWeb3=async()=> {\n//     if (window.ethereum) {\n//       window.web3 = new Web3(window.ethereum)\n//       await window.ethereum.enable()\n//     }\n//     else if (window.web3) {\n//       window.web3 = new Web3(window.web3.currentProvider)\n//     }\n//     else {\n//       window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n//     }\n//   }\n// loadWeb3();\n\nexport default web3;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/ethereum/web3.js"],"names":["Web3","web3","init","window","ethereum","enable","currentProvider","provider","providers","HttpProvider"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ;;AACA,IAAIC,IAAI,GAAC,SAALA,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACL,QAA+B,OAAOC,MAAM,CAACC,QAAd,KAA0B,WADpD;AAAA;AAAA;AAAA;;AAEPD,UAAAA,MAAM,CAACF,IAAP,GAAc,IAAID,IAAJ,CAASG,MAAM,CAACC,QAAhB,CAAd;AAFO;AAAA,2CAGED,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAHF;;AAAA;AAKR,cAAG,QAA+B,OAAOF,MAAM,CAACF,IAAd,KAAsB,WAAxD,EAAqE;AAClEA,YAAAA,IAAI,GAAC,IAAID,IAAJ,CAASG,MAAM,CAACF,IAAP,CAAYK,eAArB,CAAL;AACF,WAFD,MAEK;AACIC,YAAAA,QADJ,GACa,IAAIP,IAAI,CAACQ,SAAL,CAAeC,YAAnB,CACd,+DADc,CADb;AAIHR,YAAAA,IAAI,GAAC,IAAID,IAAJ,CAASO,QAAT,CAAL;AACD;;AAZO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAT;;AAcAL,IAAI,G,CACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,eAAeD,IAAf","sourcesContent":["import Web3 from 'web3';\n\nlet web3;\nlet init=async()=>{\n\tif(typeof window!=='undefined' && typeof window.ethereum !=='undefined'){\n\t\twindow.web3 = new Web3(window.ethereum)\n    \tawait window.ethereum.enable()\n\t}\n\tif(typeof window!=='undefined' && typeof window.web3 !=='undefined' ){\n  \t\tweb3=new Web3(window.web3.currentProvider);\n\t}else{\n  \t\tconst provider=new Web3.providers.HttpProvider(\n    \t'https://rinkeby.infura.io/v3/6c47f50d50a54cf3bd3527414b6c3d4c'\n  \t)\n  \tweb3=new Web3(provider);\n\t}\n}\ninit()\n// if(typeof window!=='undefined' && typeof window.ethereum !=='undefined'){\n// \twindow.web3 = new Web3(window.ethereum)\n//     await window.ethereum.enable()\n// }\n// else if(typeof window!=='undefined' && typeof window.web3 !=='undefined' ){\n//   web3=new Web3(window.web3.currentProvider);\n// }else{\n//   const provider=new Web3.providers.HttpProvider(\n//     'https://rinkeby.infura.io/v3/6c47f50d50a54cf3bd3527414b6c3d4c'\n//   )\n//   web3=new Web3(provider);\n// }\n//  const loadWeb3=async()=> {\n//     if (window.ethereum) {\n//       window.web3 = new Web3(window.ethereum)\n//       await window.ethereum.enable()\n//     }\n//     else if (window.web3) {\n//       window.web3 = new Web3(window.web3.currentProvider)\n//     }\n//     else {\n//       window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n//     }\n//   }\n\n// loadWeb3();\n\nexport default web3;"]},"metadata":{},"sourceType":"module"}