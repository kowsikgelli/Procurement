{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../../../components/Layout';\nimport { Form, Button, Message } from 'semantic-ui-react';\nimport instance from '../../ethereum/tender';\nimport web3 from '../../ethereum/web3';\n\nclass newBid extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      bidValue: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await instance.methods.submitBid(this.props.tenderId, this.state.bidValue).send({\n          from: accounts[0]\n        });\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    return {\n      tenderId: props.query.id\n    };\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"lable\", null, \"Bid Value\"), __jsx(\"input\", {\n      placeholder: \"Bid Value\",\n      value: this.state.bidValue,\n      onChange: event => this.setState({\n        bidValue: event.target.value\n      })\n    })), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true,\n      type: \"submit\"\n    }, \"Submit\")));\n  }\n\n}\n\nexport default newBid;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/pages/tenders/submitbid/newbid.js"],"names":["React","Layout","Form","Button","Message","instance","web3","newBid","Component","bidValue","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","submitBid","props","tenderId","state","send","from","err","message","getInitialProps","query","id","render","onSubmit","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,IAAR,EAAaC,MAAb,EAAoBC,OAApB,QAAkC,mBAAlC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AACA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAoC;AAAA;AAAA;;AAAA,mCAC7B;AACLC,MAAAA,QAAQ,EAAC,EADJ;AAELC,MAAAA,YAAY,EAAC,EAFR;AAGLC,MAAAA,OAAO,EAAC;AAHH,KAD6B;;AAAA,sCAW1B,MAAOC,KAAP,IAAe;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAC,IAAT;AAAcD,QAAAA,YAAY,EAAC;AAA3B,OAAd;;AACA,UAAG;AACF,cAAMK,QAAQ,GAAC,MAAMT,IAAI,CAACU,GAAL,CAASC,WAAT,EAArB;AACA,cAAMZ,QAAQ,CAACa,OAAT,CAAiBC,SAAjB,CAA2B,KAAKC,KAAL,CAAWC,QAAtC,EAA+C,KAAKC,KAAL,CAAWb,QAA1D,EACLc,IADK,CACA;AACLC,UAAAA,IAAI,EAACT,QAAQ,CAAC,CAAD;AADR,SADA,CAAN;AAIA,OAND,CAMC,OAAMU,GAAN,EAAU;AACV,aAAKX,QAAL,CAAc;AAACJ,UAAAA,YAAY,EAACe,GAAG,CAACC;AAAlB,SAAd;AACA;;AACD,WAAKZ,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAC;AAAT,OAAd;AACA,KAxBkC;AAAA;;AAMnC,eAAagB,eAAb,CAA6BP,KAA7B,EAAmC;AAClC,WAAM;AACLC,MAAAA,QAAQ,EAACD,KAAK,CAACQ,KAAN,CAAYC;AADhB,KAAN;AAGA;;AAeDC,EAAAA,MAAM,GAAE;AACP,WACC,MAAC,MAAD,QACC,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKT,KAAL,CAAWZ;AAAnD,OACC,MAAC,IAAD,CAAM,KAAN,QACC,iCADD,EAEC;AAAO,MAAA,WAAW,EAAC,WAAnB;AAA+B,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAWb,QAAjD;AAA2D,MAAA,QAAQ,EAAEG,KAAK,IAAE,KAAKE,QAAL,CAAc;AAACL,QAAAA,QAAQ,EAACG,KAAK,CAACoB,MAAN,CAAaC;AAAvB,OAAd;AAA5E,MAFD,CADD,EAKC,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWX,OAA5B;AAAqC,MAAA,OAAO,MAA5C;AAA6C,MAAA,IAAI,EAAC;AAAlD,gBALD,CADD,CADD;AAYA;;AAtCkC;;AAwCpC,eAAeJ,MAAf","sourcesContent":["import React from 'react';\nimport Layout from '../../../components/Layout';\nimport {Form,Button,Message} from 'semantic-ui-react'\nimport instance from '../../ethereum/tender';\nimport web3 from '../../ethereum/web3';\nclass newBid extends React.Component{\n\tstate={\n\t\tbidValue:'',\n\t\terrorMessage:'',\n\t\tloading:false\n\t}\n\tstatic async getInitialProps(props){\n\t\treturn{\n\t\t\ttenderId:props.query.id\n\t\t}\n\t}\n\tonSubmit=async (event)=>{\n\t\tevent.preventDefault();\n\t\tthis.setState({loading:true,errorMessage:''});\n\t\ttry{\n\t\t\tconst accounts=await web3.eth.getAccounts();\n\t\t\tawait instance.methods.submitBid(this.props.tenderId,this.state.bidValue)\n\t\t\t.send({\n\t\t\t\tfrom:accounts[0]\n\t\t\t})\n\t\t}catch(err){\n\t\t\tthis.setState({errorMessage:err.message});\n\t\t}\n\t\tthis.setState({loading:false})\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<Layout>\n\t\t\t\t<Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<lable>Bid Value</lable>\n\t\t\t\t\t\t<input placeholder=\"Bid Value\" value={this.state.bidValue} onChange={event=>this.setState({bidValue:event.target.value})}/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Button loading={this.state.loading} primary type='submit'>Submit</Button>\n\t\t\t\t</Form>\n\n\t\t\t</Layout>\n\t\t\t)\n\t}\n}\nexport default newBid;"]},"metadata":{},"sourceType":"module"}