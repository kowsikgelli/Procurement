{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport instance from '../../../ethereum/tender';\nimport web3 from '../../../ethereum/web3';\nimport { Card, Image } from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\n\nclass winners extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      Admin: ''\n    });\n  }\n\n  static async getInitialProps(props) {\n    try {\n      const owner = await instance.methods.owner().call();\n      const winner = await instance.methods.winner(props.query.id).call({\n        from: owner\n      });\n      console.log(\"winner\" + typeof owner);\n      console.log(winner);\n      const tenderDetails = await instance.methods.Tenders(props.query.id).call();\n      console.log(tenderDetails[1]);\n      const bidCount = await instance.methods.bidCount().call();\n      let winnerBids = [];\n\n      for (let i = 1; i <= bidCount; i++) {\n        const bid = await instance.methods.Bids(i).call();\n        let singleTenderId = bid.tenderId;\n\n        if (singleTenderId == props.query.id && bid.bidder == winner) {\n          let singleBid = await instance.methods.Bids(props.query.id).call();\n          winnerBids.push(singleBid);\n        }\n      }\n\n      let lowestBidOfWinner = winnerBids[0].bidValue;\n\n      for (let i = 0; i < winnerBids.length; i++) {\n        if (winnerBids[i].bidValue < lowestBidOfWinner) {\n          lowestBidOfWinner = winnerBids[i].bidValue;\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    return {\n      tenderId: tenderDetails[0],\n      tenderType: tenderDetails[1],\n      startDate: tenderDetails[2],\n      endDate: tenderDetails[3],\n      tenderSubject: tenderDetails[4],\n      tenderReceivingLocation: tenderDetails[5],\n      maxBidValue: tenderDetails[6],\n      winner: winner,\n      winnerBid: lowestBidOfWinner\n    };\n  }\n\n  renderCards() {\n    const {\n      tenderId,\n      tenderType,\n      startDate,\n      endDate,\n      tenderSubject,\n      tenderReceivingLocation,\n      maxBidValue,\n      winner,\n      winnerBid\n    } = this.props;\n    const start = new Date(startDate * 1000);\n    const normalStartDate = `${start.getDate()}/${start.getMonth() + 1}/${start.getFullYear()}    ${start.getHours()}:${start.getMinutes()}:${start.getSeconds()}`;\n    const end = new Date(endDate * 1000);\n    const normalEndDate = `${end.getDate()}/${end.getMonth() + 1}/${end.getFullYear()}    ${end.getHours()}:${end.getMinutes()}:${end.getSeconds()}`;\n    const items = [{\n      header: winner,\n      meta: winnerBid,\n      description: 'winner of this Tender :)',\n      fluid: true\n    }, {\n      header: tenderType,\n      meta: \"type of tender\",\n      description: 'tender type is shown here',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: tenderId,\n      description: 'tender id is shown here',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: normalStartDate,\n      description: 'tender start date is shown here',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: normalEndDate,\n      description: 'tender closing date is shown here',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: tenderSubject,\n      description: 'tender subject is shown here',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: tenderReceivingLocation,\n      description: 'tenderReceivingLocation is shown here',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: maxBidValue,\n      description: 'maxBidValue is shown here',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Image, {\n      centered: true,\n      src: \"https://t3.ftcdn.net/jpg/01/07/31/48/240_F_107314824_sZFb5Gky3202H2x93do25iyYlpma3eul.jpg\"\n    }), this.renderCards());\n  }\n\n}\n\nexport default winners;","map":{"version":3,"sources":["/home/kowsik/Desktop/procurement/pages/tenders/winner/winners.js"],"names":["React","instance","web3","Card","Image","Layout","winners","Component","Admin","getInitialProps","props","owner","methods","call","winner","query","id","from","console","log","tenderDetails","Tenders","bidCount","winnerBids","i","bid","Bids","singleTenderId","tenderId","bidder","singleBid","push","lowestBidOfWinner","bidValue","length","err","tenderType","startDate","endDate","tenderSubject","tenderReceivingLocation","maxBidValue","winnerBid","renderCards","start","Date","normalStartDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","end","normalEndDate","items","header","meta","description","fluid","style","overflowWrap","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport instance from '../../../ethereum/tender';\nimport web3 from '../../../ethereum/web3';\nimport {Card,Image} from 'semantic-ui-react';\nimport Layout from '../../../components/Layout';\nclass winners extends React.Component{\n\tstate={\n\t\tAdmin:''\n\t}\n\tstatic async getInitialProps(props){\n\t\ttry{\n\t\t\tconst owner=await instance.methods.owner().call();\n\t\t\tconst winner=await instance.methods.winner(props.query.id).call({from:owner});\n\t\t\tconsole.log(\"winner\"+typeof(owner))\n\t\t\tconsole.log(winner)\n\t\t\tconst tenderDetails=await instance.methods.Tenders(props.query.id).call();\n\t\t\tconsole.log(tenderDetails[1])\n\t\t\tconst bidCount= await instance.methods.bidCount().call();\n\t\t\tlet winnerBids=[]\n\t\t\tfor(let i=1;i<=bidCount;i++){\n\t\t\t\tconst bid=await instance.methods.Bids(i).call();\n\t\t\t\tlet singleTenderId=bid.tenderId;\n\t\t\t\n\t\t\t\tif((singleTenderId==props.query.id) && (bid.bidder==winner)){\n\t\t\t\t\n\t\t\t\tlet singleBid=await instance.methods.Bids(props.query.id).call();\n\t\t\t\n\t\t\t\t\twinnerBids.push(singleBid);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet lowestBidOfWinner=winnerBids[0].bidValue;\n\t\t\tfor(let i=0;i<winnerBids.length;i++){\n\t\t\t\tif(winnerBids[i].bidValue<lowestBidOfWinner){\n\t\t\t\t\tlowestBidOfWinner=winnerBids[i].bidValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(err){\n\t\t\tconsole.log(err)\n\t\t}\n\t\t\n\t\treturn {\n\t\t\ttenderId:tenderDetails[0],\n\t\t\ttenderType:tenderDetails[1],\n\t\t\tstartDate:tenderDetails[2],\n\t\t\tendDate:tenderDetails[3],\n\t\t\ttenderSubject:tenderDetails[4],\n\t\t\ttenderReceivingLocation:tenderDetails[5],\n\t\t\tmaxBidValue:tenderDetails[6],\n\t\t\twinner:winner,\n\t\t\twinnerBid:lowestBidOfWinner\n\t\t}\n\t}\n\trenderCards(){\n\t\tconst {\n\t\t\ttenderId,\n\t\t\ttenderType,\n\t\t\tstartDate,\n\t\t\tendDate,\n\t\t\ttenderSubject,\n\t\t\ttenderReceivingLocation,\n\t\t\tmaxBidValue,\n\t\t\twinner,\n\t\t\twinnerBid\n\t\t}=this.props;\n\t\tconst start = new Date(startDate*1000);\n\t\tconst normalStartDate=`${start.getDate()}/${start.getMonth()+1}/${start.getFullYear()}    ${start.getHours()}:${start.getMinutes()}:${start.getSeconds()}`\n\t\tconst end = new Date(endDate*1000);\n\t\tconst normalEndDate=`${end.getDate()}/${end.getMonth()+1}/${end.getFullYear()}    ${end.getHours()}:${end.getMinutes()}:${end.getSeconds()}`\n\t\tconst items=[\n\t\t\t{\n\t\t\t\theader:winner,\n\t\t\t\tmeta:winnerBid,\n\t\t\t\tdescription:'winner of this Tender :)',\n\t\t\t\tfluid:true\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderType,\n\t\t\t\tmeta:\"type of tender\",\n\t\t\t\tdescription:'tender type is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderId,\n\t\t\t\tdescription:'tender id is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:normalStartDate,\n\t\t\t\tdescription:'tender start date is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:normalEndDate,\n\t\t\t\tdescription:'tender closing date is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderSubject,\n\t\t\t\tdescription:'tender subject is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:tenderReceivingLocation,\n\t\t\t\tdescription:'tenderReceivingLocation is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t},\n\t\t\t{\n\t\t\t\theader:maxBidValue,\n\t\t\t\tdescription:'maxBidValue is shown here',\n\t\t\t\tstyle:{overflowWrap:'break-word'}\n\t\t\t}\n\t\t]\n\t\treturn <Card.Group items={items} />\n\t}\n\trender(){\n\t\treturn(\n\t\t\t\t<Layout>\n\t\t\t\t\t<Image centered src=\"https://t3.ftcdn.net/jpg/01/07/31/48/240_F_107314824_sZFb5Gky3202H2x93do25iyYlpma3eul.jpg\"/>\n\t\t\t\t\t{this.renderCards()}\n\t\t\t\t</Layout>\n\t\t\t)\n\t}\n}\nexport default winners;"]},"metadata":{},"sourceType":"module"}